name: Release

permissions:
  contents: write
  pull-requests: write

on:
  push:
    tags:
      - 'v*'

env:
  LOG_BRANCH: 'main'
  LOG_FILE: 'CHANGELOG.md'
  LOG_HEADER: "# pass-tabs\n"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install

      - name: CI:test
        run: |
          pnpm run test --coverage

      - name: Build
        run: pnpm run build

      - name: Release changelog -(0)
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GH_RELEASE_TOKEN}}

      - name: Get tag name -(1)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "Current TAG: ${TAG_NAME}"
          # ‰øùÂ≠ò TAG_NAME Âà∞ÁéØÂ¢ÉÂèòÈáè
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Generate changelog -(2)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git checkout "$LOG_BRANCH"
          # ËæìÂá∫ÂΩìÂâç changelog ÂÜÖÂÆπ
          npx changelogithub --output __LOG.md
          TAG_CONTENT=$(cat __LOG.md)
          TAG_TITLE="## $TAG_NAME\n"
          # Ê£ÄÊü•Êó•ÂøóÊñá‰ª∂ÊòØÂê¶Â≠òÂú®
          if [ ! -f "$LOG_FILE" ]; then
            echo "$LOG_HEADER" > "$LOG_FILE"
          fi
          # ÊãºÊé•Êó•ÂøóÈ°∂ÈÉ®ÂÜÖÂÆπ
          LOG_CONTENT="$LOG_HEADER\n$TAG_TITLE\n$TAG_CONTENT\n"
          # ‰ΩøÁî® echo ÊèíÂÖ•Êñ∞ÂÜÖÂÆπÔºåÁÑ∂ÂêéÁî® cat ËøΩÂä†Ââ©‰ΩôÁöÑÂÜÖÂÆπÔºàÂéªÊéâÁ¨¨‰∏ÄË°åÔºâ
          (echo -e "$LOG_CONTENT"; tail -n +2 "$LOG_FILE") > __temp_file && mv __temp_file "$LOG_FILE"

      - name: Sync changelog -(3)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "$LOG_FILE"
          git commit -m "chore: update changelog"
          git push origin "$LOG_BRANCH"
          echo "üòç changelog synced"